apply plugin: 'com.android.library'
apply plugin: 'com.novoda.bintray-release'

android {
    compileSdkVersion versions.compile_sdk

    defaultConfig {
        minSdkVersion versions.min_sdk
        targetSdkVersion versions.target_sdk
        versionCode 4
        versionName "1.0.5"
    }
    buildTypes {
        debug {
            debuggable true
            versionNameSuffix '-DEBUG'
            buildConfigField "String", "SOCIAL_API_ENDPOINT", '"https://social.uploadcare.com/"'
        }
        release {
            debuggable false
            minifyEnabled false
            buildConfigField "String", "SOCIAL_API_ENDPOINT", '"https://social.uploadcare.com/"'
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES.txt'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/dependencies.txt'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/LGPL2.1'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/notice.txt'
    }

    lintOptions {
        abortOnError false
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

publish {
    Properties properties = new Properties()
    if (project.rootProject.file('local.properties').exists()) {
        properties.load(project.rootProject.file('local.properties').newDataInputStream())
    }

    groupId = 'com.uploadcare.android.widget'
    artifactId = 'uploadcare-android-widget'
    publishVersion = '1.0.5'
    desc = 'Android client library for the Uploadcare API.'
    licences = ["Apache-2.0"]
    website = 'https://github.com/uploadcare/uploadcare-android'
    issueTracker = 'https://github.com/uploadcare/uploadcare-android/issues'
    repository = 'https://github.com/uploadcare/uploadcare-android.git'
    autoPublish = true
    bintrayUser = properties.containsKey('bintray.user') ? properties.getProperty("bintray.user") : System.getenv('BINTRAY_USER')
    bintrayKey = properties.containsKey('bintray.key') ? properties.getProperty("bintray.key") : System.getenv('BINTRAY_KEY')
    dryRun = false
}


dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    testImplementation 'junit:junit:4.12'
    implementation project (':library')
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support:recyclerview-v7:28.0.0'
    implementation 'com.android.support:support-annotations:28.0.0'
    implementation 'com.android.support:design:28.0.0'
    implementation 'com.squareup.picasso:picasso:2.5.2'
    implementation "com.squareup.retrofit2:converter-gson:$versions.retrofit"
    implementation "com.squareup.retrofit2:retrofit:$versions.retrofit"
    implementation "com.squareup.okhttp3:okhttp:$versions.okhttp"
    implementation "com.squareup.okhttp3:logging-interceptor:$versions.okhttp"
    testImplementation "com.squareup.okhttp3:mockwebserver:$versions.okhttp"
    implementation 'com.github.castorflex.smoothprogressbar:library-circular:1.1.0'
    implementation 'jp.wasabeef:recyclerview-animators:2.1.0'
}
